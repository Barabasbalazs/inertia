/*
 * @adonisjs/inertia
 *
 * (c) AdonisJS
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

import { Vite } from '@adonisjs/vite'

import type { PageObject, RenderInertiaSsrApp, ResolvedConfig } from './types.js'

/**
 * Responsible for rendering page on the server
 *
 * - In development, we use the Vite Runtime API
 * - In production, we just import and use the SSR
 *  bundle generated by Vite
 */
export class ServerRenderer {
  constructor(
    protected config: ResolvedConfig,
    protected vite?: Vite
  ) {}

  /**
   * Render the page on the server
   *
   * On development, we use the Vite Runtime API
   * On production, we just import and use the SSR bundle generated by Vite
   */
  async render(pageObject: PageObject) {
    let render: { default: RenderInertiaSsrApp }
    const devServer = this.vite?.getDevServer()

    /**
     * Use the Vite Runtime API to execute the entrypoint
     * if we are in development mode
     */
    if (devServer) {
      const runtime = await this.vite!.createRuntime()
      render = await runtime.executeEntrypoint(this.config.ssr.entrypoint!)
    } else {
      /**
       * Otherwise, just import the SSR bundle
       */
      render = await import(this.config.ssr.bundle!)
    }

    /**
     * Call the render function and return head and body
     */
    const result = await render.default(pageObject)
    return { head: result.head, body: result.body }
  }
}
